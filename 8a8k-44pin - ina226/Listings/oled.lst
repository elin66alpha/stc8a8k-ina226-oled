C51 COMPILER V9.60.0.0   OLED                                                              11/04/2021 22:17:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Keil_v5\C51) DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          #include <STC8.H>
   3          #include "oled.h"
   4            
   5          #include "intrins.h"
   6          #include "oledfont.h"  
   7          
   8          void OLED_WR_Byte(unsigned dat,unsigned cmd)
   9          {
  10   1        if(cmd)
  11   1            {
  12   2      
  13   2         Write_IIC_Data(dat);
  14   2         
  15   2          }
  16   1        else {
  17   2         Write_IIC_Command(dat);
  18   2          
  19   2        }
  20   1      
  21   1      
  22   1      }
  23          
  24          /********************************************
  25          // fill_Picture
  26          ********************************************/
  27          //void fill_picture(unsigned char fill_Data)
  28          //{
  29          //  unsigned char m,n;
  30          //  for(m=0;m<8;m++)
  31          //  {
  32          //    OLED_WR_Byte(0xb0+m,0);   //page0-page1
  33          //    OLED_WR_Byte(0x00,0);   //low column start address
  34          //    OLED_WR_Byte(0x10,0);   //high column start address
  35          //    for(n=0;n<128;n++)
  36          //      {
  37          //        OLED_WR_Byte(fill_Data,1);
  38          //      }
  39          //  }
  40          //}
  41          
  42          
  43          
  44          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  45          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
  46   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  47   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
  48   1      }       
  49          ////开启OLED显示    
  50          //void OLED_Display_On(void)
  51          //{
  52          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  53          //  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  54          //  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
C51 COMPILER V9.60.0.0   OLED                                                              11/04/2021 22:17:19 PAGE 2   

  55          //}
  56          ////关闭OLED显示     
  57          //void OLED_Display_Off(void)
  58          //{
  59          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  60          //  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  61          //  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  62          //}            
  63          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
  64              
  65          void OLED_Clear(void)  
  66          {  
  67   1        u8 i,n;       
  68   1        for(i=0;i<8;i++)  
  69   1        {  
  70   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  71   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置—列低地址
  72   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置—列高地址   
  73   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  74   2        } //更新显示
  75   1      }
  76          //void OLED_On(void)  
  77          //{  
  78          //  u8 i,n;       
  79          //  for(i=0;i<8;i++)  
  80          //  {  
  81          //    OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  82          //    OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置—列低地址
  83          //    OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置—列高地址   
  84          //    for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
  85          //  } //更新显示
  86          //}
  87          //在指定位置显示一个字符,包括部分字符
  88          //x:0~127
  89          //y:0~63
  90          //mode:0,反白显示;1,正常显示         
  91          //size:选择字体 16/12 
  92          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
  93          {       
  94   1        unsigned char c=0,i=0;  
  95   1          c=chr-' ';//得到偏移后的值     
  96   1          if(x>Max_Column-1){x=0;y=y+2;}
  97   1          if(Char_Size ==16)
  98   1            {
  99   2            OLED_Set_Pos(x,y);  
 100   2            for(i=0;i<8;i++)
 101   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 102   2            OLED_Set_Pos(x,y+1);
 103   2            for(i=0;i<8;i++)
 104   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 105   2            }
 106   1            else {  
 107   2              OLED_Set_Pos(x,y);
 108   2              for(i=0;i<6;i++)
 109   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 110   2              
 111   2            }
 112   1      }
 113          
 114          //显示单个数字
 115          //void OLED_Showm(u8 x,u8 y,u16 num,u8 size2)
 116          //{  
C51 COMPILER V9.60.0.0   OLED                                                              11/04/2021 22:17:19 PAGE 3   

 117          //  u8 i,f,g;
 118          //  if(num>>15)//负温度
 119          //  {
 120          //    num=num&0x7fff;//高位清零
 121          //    i=num/100;
 122          //    f=num%100/10;
 123          //    g=num%10;
 124          //    OLED_ShowChar(x,y,'-',size2);
 125          //    OLED_ShowChar(x+size2/2,y,f+'0',size2);
 126          //    OLED_ShowChar(x+size2,y,'.',size2);
 127          //    OLED_ShowChar(x+size2+4,y,g+'0',size2);
 128          //}
 129          //else
 130          //{
 131          //   i=num/100;
 132          //  f=num%100/10;
 133          //  g=num%10;
 134          //  OLED_ShowChar(x,y,i+'0',size2);
 135          //  OLED_ShowChar(x+size2/2,y,f+'0',size2);
 136          //  OLED_ShowChar(x+size2,y,'.',size2);
 137          //  OLED_ShowChar(x+size2+4,y,g+'0',size2);
 138          //
 139          //
 140          //}}
 141          //m^n函数
 142          //u16 oled_pow(u8 m,u8 n)
 143          //{
 144          //  u16 result=1;  
 145          //  while(n--)result*=m;    
 146          //  return result;
 147          //}         
 148          //显示2个数字
 149          //x,y :起点坐标  
 150          //len :数字的位数
 151          //size:字体大小
 152          //mode:模式 0,填充模式;1,叠加模式
 153          //num:数值(0~4294967295);       
 154          
 155          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 156          {
 157   1        unsigned char j=0;
 158   1        while (chr[j]!='\0')
 159   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 160   2            x+=8;
 161   2          if(x>120){x=0;y+=2;}
 162   2            j++;
 163   2        }
 164   1      }
 165          u16 oled_pow(u8 m,u8 n)
 166          {
 167   1        u16 result=1;  
 168   1        while(n--)result*=m;    
 169   1        return result;
 170   1      }   
 171          void OLED_ShowNum(u8 x,u8 y,u16 num,u8 len,u8 size2)
 172          {           
 173   1        u8 t,temp;
 174   1        u8 enshow=0;               
 175   1        for(t=0;t<len;t++)
 176   1        {
 177   2          temp=(num/oled_pow(10,len-t-1))%10;
 178   2          if(enshow==0&&t<(len-1))
C51 COMPILER V9.60.0.0   OLED                                                              11/04/2021 22:17:19 PAGE 4   

 179   2          {
 180   3            if(temp==0)
 181   3            {
 182   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 183   4              continue;
 184   4            }else enshow=1; 
 185   3             
 186   3          }
 187   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 188   2        }
 189   1      } 
 190          //显示汉字
 191          //void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 192          //{               
 193          //  u8 t,adder=0;
 194          //  OLED_Set_Pos(x,y);  
 195          //    for(t=0;t<16;t++)
 196          //    {
 197          //        OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 198          //        adder+=1;
 199          //     }  
 200          //    OLED_Set_Pos(x,y+1);  
 201          //    for(t=0;t<16;t++)
 202          //      { 
 203          //        OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 204          //        adder+=1;
 205          //      }         
 206          //}
 207          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的
             -范围0～7*****************/
 208          //void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BM
             -P[])
 209          //{   
 210          // unsigned int j=0;
 211          // unsigned char x,y;
 212          //  
 213          //  if(y1%8==0) y=y1/8;      
 214          //  else y=y1/8+1;
 215          //  for(y=y0;y<y1;y++)
 216          //  {
 217          //    OLED_Set_Pos(x0,y);
 218          //    for(x=x0;x<x1;x++)
 219          //      {      
 220          //        OLED_WR_Byte(BMP[j++],OLED_DATA);       
 221          //      }
 222          //  }
 223          //} 
 224          
 225          //初始化SSD1306              
 226          void OLED_Init(void)
 227          {   
 228   1       
 229   1      OLED_WR_Byte(0xAE,OLED_CMD); //关闭显示display off
 230   1        OLED_WR_Byte(0x20,OLED_CMD);  //Set Memory Addressing Mode  
 231   1        OLED_WR_Byte(0x10,OLED_CMD);  //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressi
             -ng Mode (RESET,OLED_CMD);11,Invalid
 232   1        OLED_WR_Byte(0xb0,OLED_CMD);  //Set Page Start Address for Page Addressing Mode,0-7
 233   1        OLED_WR_Byte(0xc8,OLED_CMD);  //Set COM Output Scan Direction
 234   1        OLED_WR_Byte(0x02,OLED_CMD); //-设置低位列地址set low column address 注意：0.96屏幕从0x00开
             -始写数据，1.3寸屏幕从0x02开始写数据
 235   1        OLED_WR_Byte(0x10,OLED_CMD); //-设置高位列地址set high column address
 236   1        OLED_WR_Byte(0x40,OLED_CMD); //--set start line address
C51 COMPILER V9.60.0.0   OLED                                                              11/04/2021 22:17:19 PAGE 5   

 237   1        OLED_WR_Byte(0x81,OLED_CMD); //--set contrast control register
 238   1        OLED_WR_Byte(0xff,OLED_CMD); //亮度调节 0x00~0xff
 239   1        OLED_WR_Byte(0xa1,OLED_CMD); //--set segment re-map 0 to 127
 240   1        OLED_WR_Byte(0xa6,OLED_CMD); //--set normal display
 241   1        OLED_WR_Byte(0xa8,OLED_CMD); //--set multiplex ratio(1 to 64,OLED_CMD)
 242   1        OLED_WR_Byte(0x3F,OLED_CMD); //
 243   1        OLED_WR_Byte(0xa4,OLED_CMD); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 244   1        OLED_WR_Byte(0xd3,OLED_CMD); //-设置显示偏移set display offset
 245   1        OLED_WR_Byte(0x00,OLED_CMD); //-没有偏移not offset
 246   1        OLED_WR_Byte(0xd5,OLED_CMD); //-设置时钟分频因子,震荡频率set display clock divide ratio/oscil
             -lator frequency
 247   1        OLED_WR_Byte(0xf0,OLED_CMD); //--set divide ratio
 248   1        OLED_WR_Byte(0xd9,OLED_CMD); //--set pre-charge period
 249   1        OLED_WR_Byte(0x22,OLED_CMD); //
 250   1        OLED_WR_Byte(0xda,OLED_CMD); //--设置COM硬件引脚配置set com pins hardware configuration
 251   1        OLED_WR_Byte(0x12,OLED_CMD);//[5:4]配置
 252   1        OLED_WR_Byte(0xdb,OLED_CMD); //--set vcomh
 253   1        OLED_WR_Byte(0x20,OLED_CMD); //0x20,0.77xVcc
 254   1        OLED_WR_Byte(0x8d,OLED_CMD); //-电荷泵设置set DC-DC enable
 255   1        OLED_WR_Byte(0x14,OLED_CMD); //bit2，开启/关闭
 256   1        OLED_WR_Byte(0xaf,OLED_CMD); //-开启显示 turn on oled panel
 257   1      }  
 258          
 259          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    827    ----
   CONSTANT SIZE    =   2968    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
